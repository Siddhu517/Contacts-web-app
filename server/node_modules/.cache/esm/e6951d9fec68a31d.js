let User;_ec6‍.x([["addUser",()=>addUser],["getUsers",()=>getUsers],["getUser",()=>getUser],["editUser",()=>editUser],["deleteUser",()=>deleteUser]]);_ec6‍.w("../models/user",[["default",["User"],function(v){User=v}]]);

       const addUser = async (req, res) => {
  const user = req.body;
  _ec6‍.g.console.log(user);
  const newUser = new User(user);

  try {
    await newUser.save();
    res.status(200).json(newUser);
  } catch (err) {
    res.status(404).json({ message: err.message });
  }
};

       const getUsers = async (req, res) => {
  try {
    const users = await User.find({});
    res.status(200).json(users);
  } catch (err) {
    res.status(404).json({ message: err.message });
  }
};

       const getUser = async (req, res) => {
  try {
    //const user = await User.find({_id: req.params.id});
    const user = await User.findById(req.params.id);
    res.status(200).json(user);
  } catch (err) {
    res.status(404).json({ message: err.message });
  }
};

       const editUser = async (req, res) => {
  let user = req.body;
  const editUser = new User(user);

  try {
    await User.updateOne({ _id: req.params.id }, editUser);
    res.status(201).json(editUser);
  } catch (err) {
    res.status(409).json({ message: err.message });
  }
};

       const deleteUser = async (req, res) => {
  try {
    await User.deleteOne({ _id: req.params.id });
    res.status(200).json({ message: "User deleted Successfully" });
  } catch (err) {
    res.status(409).json({ message: err.message });
  }
};
